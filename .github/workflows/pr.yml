# SPDX-FileCopyrightText: Intel Corporation
#
# SPDX-License-Identifier: BSD-3-Clause

name: "PR Tests"

on:
  push:
    branches:
      - main

  pull_request:

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  IMPI: impi@2021.10.0
  MKL:  mkl@2023.2.0
  TBB:  tbb@2021.10.0
  ICX:  icx@2023.2.0

jobs:
  checks:
    runs-on: ${{ github.repository_owner == 'oneapi-src' && 'intel-ubuntu-latest' || 'ubuntu-latest' }}
    steps:
    - uses: actions/checkout@v4
    - name: Ubuntu dependencies
      run: .github/workflows/setup-docs-ubuntu.sh
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - name: Checks
      uses: pre-commit/action@v3.0.0

  gcc:
    runs-on: ${{ github.repository_owner == 'oneapi-src' && 'intel-ubuntu-latest' || 'ubuntu-latest' }}
    needs: checks
    strategy:
      fail-fast: false
      matrix:
        include:
        - cxx: g++-12
    name: ${{ matrix.cxx }}
    env:
      CXX: ${{ matrix.cxx }}
    steps:
    - uses: actions/checkout@v4
    - uses: rscohn2/setup-oneapi@v0
      with:
        components: |
          ${{ env.IMPI }}
          ${{ env.MKL }}
          ${{ env.TBB }}
    - name: Generate
      run: |
        source /opt/intel/oneapi/setvars.sh
        cmake -B build
    - name: Build
      run: |
        source /opt/intel/oneapi/setvars.sh
        make -C build -j 2
    - name: Test
      run: |
        source /opt/intel/oneapi/setvars.sh
        ctest --test-dir build
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: log-gcc-${{ env.CXX }}
        path: build/Testing

  icpx:
    runs-on: devcloud
    needs: checks
    timeout-minutes: 60
    # MPI device memory does not work
    env:
      CXX: icpx
      EXCLUDE: "--exclude=idc-beta-batch-pvc-node-17,idc-beta-batch-pvc-node-18,idc-beta-batch-pvc-node-19"
    steps:
    - uses: actions/checkout@v4
    - name: Test
      run: srun ${EXCLUDE} -p pvc-shared scripts/devcloud-test.sh
    - name: Upload build logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: log-icpx
        path: build/Testing

  publish:
    needs: [gcc, icpx]
    runs-on: ${{ github.repository_owner == 'oneapi-src' && 'intel-ubuntu-latest' || 'ubuntu-latest' }}
    env:
      SPHINXOPTS: -q -W
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v4
    - name: Ubuntu dependencies
      run: .github/workflows/setup-docs-ubuntu.sh
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - name: Build doc
      run: |
        make -C doc/spec html
    - name: Checkout gh-pages
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages
    - name: Publish to github pages
      run: |
        rm -rf gh-pages/spec gh-pages/doxygen
        touch gh-pages/.nojekyll

        cp -r doc/spec/build/html gh-pages/spec
        cp -r doc/spec/build/doxygen-html gh-pages/doxygen

        cd gh-pages
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        # Ignore errors because no updates returns an error status.
        git commit --reset-author --amend -m "Update from github actions"
        git push --force origin gh-pages
